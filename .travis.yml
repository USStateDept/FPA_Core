language: python
python:
  - "2.7"
addons:
  postgresql: "9.3"
env:
 global:
    - OPENSPENDING_SETTINGS=./test_settings.py
services:
  - rabbitmq
before_install:
  - virtualenv ./pyenv --distribute
  - source ./pyenv/bin/activate
  #- sudo service postgresql restart 9.3
install:
  # To install external filter binaries, we first need to install
  # RubyGems and Node/NPM. I'm not sure why, since it seems clear
  # that NVM and RVM are pre-installed (see below).
  # - sudo apt-get install python-software-properties
  # - sudo apt-add-repository -y ppa:chris-lea/node.js
  # - sudo apt-get update
  # - sudo apt-get install nodejs rubygems
  # These are useful for debugging this mess.
  #- env
  #- gem env
  #- rvm info
  # Use non-http registry? https://github.com/n1k0/casperjs/issues/876
  # Without this, installing doesn't work.
  # - sudo npm config set registry http://registry.npmjs.org/

  # Now install the external filter binaries, finally.
  # If we use sudo for this, ruby gems will not work: it seems they are
  # then installed globally, but are then searched for in a RVM location.
  # (Clearing GEM_HOME might be a way to fix this, if sudo where necessary).
  #- sh requirements-dev.sh

  # Install OpenRefine
  # ERRORs  Should stop building
  #- wget http://google-refine.googlecode.com/files/google-refine-2.1-r2136.tar.gz
  #- tar -zxvf google-refine-2.1-r2136.tar.gz
  #- sudo google-refine-2.1/refine


  - pip install -r requirements.txt -e .
  - pip install psycopg2 coveralls
  #https://code.google.com/p/google-refine/downloads/detail?name=google-refine-2.1-r2136.tar.gz&can=1&q=


before_script:
  - psql -c 'create database openspending_testing;' -U postgres
  - psql -d openspending_testing -U postgres -c "create extension postgis"
  - pg_restore -d openspending_testing -U postgres < ./openspending/tests/fixtures/testing_database.backup
  #make sure there is the latest db schema
  #migrate script didn't work with absolute location
  #- ostool db migrate
  - nosetests --version
script:
  - nosetests --with-coverage --cover-package=openspending
after_success:
  - coveralls
